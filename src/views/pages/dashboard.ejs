<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
    <title>Dashboard - Daily Leads Count</title>

    <link rel="stylesheet" href="/css/dashboard.css" />
  </head>
  <body>
    <main class="main">
      <!-- Header -->
      <div class="header animated-header">
        <div>
          <h1>DASHBOARD - DAILY LEADS COUNT</h1>
          <p>
            <%= quote && quote.quote ? quote.quote : "Achieve your target." %>
          </p>
          <p style="margin-top: -25px">
            ~ <%= quote && quote.author ? quote.author : "Bob Hooey" %>
          </p>
        </div>
        <button id="attendance-btn" class="btn btn-blue">
          Mark Attendance
        </button>
      </div>
      <!-- Content -->
      <div class="content animated-element">
        <div class="top-buttons">
          <a href="#" id="openModalBtn" class="btn btn-green"> Line Chart </a>
        </div>

        <div class="table-container">
          <table>
            <thead>
              <tr>
                <th>DATE</th>
                <th>LEAD COUNT</th>
              </tr>
            </thead>
            <tbody>
              <% leadCount.forEach(function(lead) { %>
              <tr>
                <td><%= lead.createdAt.toDateString().substring(0,15) %></td>
                <td><%= lead.count %></td>
              </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Overlay + Modal -->
      <div class="modal-overlay" id="overlay"></div>

      <div
        class="modal"
        id="chartModal"
        role="dialog"
        aria-modal="true"
        aria-labelledby="chartTitle"
      >
        <div class="modal-header">
          <h3 class="modal-title" id="chartTitle">Leads Count</h3>
        </div>
        <div class="modal-body">
          <div class="chart-wrap">
            <canvas id="lineCanvas">
              Your browser does not support canvas.
            </canvas>
          </div>
        </div>
        <div class="modal-footer">
          <button class="close-btn" id="closeModalBtn">Close</button>
        </div>
      </div>
    </main>

    <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
    <script>
      $("#attendance-btn").on("click", function () {
        $.ajax({
          url: "/api/v1/user/attendance",
          type: "POST",
          contentType: "application/json",
          success: function (response) {
            alert("Server Response: " + response);
          },
          error: function (xhr, status, error) {
            console.log(xhr);
            alert("Error: " + xhr.responseJSON.message);
          },
        });
      });

      // ES5-compatible (works in FF28)
      var openBtn = document.getElementById("openModal");
      var modal = document.getElementById("demoModal");
      var closeBtn = document.getElementById("closeModal");
      var cancelBtn = document.getElementById("cancelBtn");

      // Open
      openBtn.onclick = function (e) {
        e.preventDefault();
        modal.className = "modal active";
      };

      // Close (button + cancel)
      closeBtn.onclick = cancelBtn.onclick = function (e) {
        e.preventDefault();
        modal.className = "modal";
      };

      // Close on backdrop click
      modal.onclick = function (e) {
        if (e.target === modal) {
          modal.className = "modal";
        }
      };

      // Close on ESC key
      document.onkeydown = function (e) {
        e = e || window.event;
        if (e.keyCode === 27) {
          // 27 = ESC
          modal.className = "modal";
        }
      };
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.1.1/Chart.min.js"></script>
    <script>
      // ES5 only (Firefox 28 safe)
      var openBtn = document.getElementById("openModalBtn");
      var closeBtn = document.getElementById("closeModalBtn");
      var overlay = document.getElementById("overlay");
      var modal = document.getElementById("chartModal");
      var chartInstance = null;

      var leadsData = <%- JSON.stringify(leadCount) %>;

      function openModal() {
        overlay.className = "modal-overlay show";
        modal.className = "modal show";

        // Create chart after modal is visible so canvas has correct size
        // (If already created, destroy and recreate to fit size)
        createOrUpdateChart();
      }

      function closeModal() {
        overlay.className = "modal-overlay";
        modal.className = "modal";

        // Optional: destroy chart to free memory (Chart.js v1)
        if (chartInstance && chartInstance.destroy) {
          chartInstance.destroy();
          chartInstance = null;
        }
      }

      function createOrUpdateChart() {
        var canvas = document.getElementById("lineCanvas");
        var ctx = canvas.getContext("2d");

        var labels = leadsData.map((item) =>new Date(item.createdAt).toDateString());

        var dataPoints = leadsData.map((item) =>item.count)

        var data = {
          labels: labels,
          datasets: [
            {
              label: "Leads",
              fillColor: "rgba(37,99,235,0.5)",
              strokeColor: "#2563eb",
              pointColor: "#2563eb",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "#1b3c53",
              data: dataPoints,
            },
          ],
        };

        var options = {
          responsive: true, // Chart.js v1 responsive mode
          maintainAspectRatio: false, // fill the .chart-wrap height
          bezierCurve: true,
          bezierCurveTension: 0.4,
          pointDot: true,
          pointDotRadius: 3,
          datasetStrokeWidth: 2,
          scaleShowGridLines: true,
          scaleGridLineColor: "rgba(0,0,0,.05)",
          scaleLineColor: "rgba(0,0,0,.1)",
          scaleFontColor: "#444",
          animation: true,
          animationSteps: 30,
        };

        // (Re)create chart
        if (chartInstance && chartInstance.destroy) {
          chartInstance.destroy();
        }
        chartInstance = new Chart(ctx).Line(data, options);
      }

      // Wire up events
      openBtn.addEventListener("click", openModal, false);
      closeBtn.addEventListener("click", closeModal, false);
      overlay.addEventListener("click", closeModal, false);

      // Optional: handle ESC key to close modal
      document.addEventListener(
        "keydown",
        function (e) {
          e = e || window.event;
          if (e.keyCode === 27) {
            closeModal();
          }
        },
        false
      );
    </script>
  </body>
</html>
